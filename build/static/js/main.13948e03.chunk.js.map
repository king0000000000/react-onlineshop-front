{"version":3,"sources":["components/Product/index.tsx","redux/constants/productConstants.ts","screens/HomeScreen/index.tsx","redux/actions/productActions.ts","redux/constants/cartConstants.ts","redux/actions/cartActions.ts","screens/ProductScreen/index.tsx","components/CartItem/index.tsx","screens/CartScreen/index.tsx","components/Navbar/index.tsx","components/Backdrop/index.tsx","components/SideDrawer/index.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","redux/reducers/cartReducers.ts","redux/reducers/productReducers.ts","index.tsx"],"names":["Product","imageUrl","name","price","description","productId","className","src","alt","substring","to","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","useSelector","state","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addToCart","id","qty","getState","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","ProductScreen","match","history","useState","setQty","productDetails","getProductDetails","params","value","onChange","e","parseInt","target","Array","keys","x","onClick","push","CartItem","item","qtyChangeHandler","removeHandler","CartScreen","removeFromCart","length","reduce","Number","Navbar","props","click","Backdrop","show","SideDrawer","sideDrawerClass","join","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","prestate","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13948e03.chunk.js","sourcesContent":["import \"./index.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\ntype productInput = { imageUrl: string, name: string, price: number, description: string, productId: string }\r\n\r\nconst Product = ({ imageUrl, name, price, description, productId }: productInput) => {\r\n    return (\r\n        <div className=\"product\">\r\n            <img src={imageUrl} alt={name} />\r\n\r\n            <div className=\"product_info\">\r\n                <p className=\"info_name\">{name}</p>\r\n                <p className=\"info_description\">{description.substring(0, 100)}...</p>\r\n\r\n                <p className=\"info_price\">${price} NT</p>\r\n\r\n                <Link to={`/product/${productId}`} className=\"info_button\">\r\n                    View\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\"\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\"\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\"\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\"\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\"\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\"\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\"","import './index.css'\r\nimport { useEffect } from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\n\r\n//Components\r\nimport Product from '../../components/Product'\r\n\r\n//Actions\r\nimport { getProducts as listProducts } from '../../redux/actions/productActions'\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const getProducts = useSelector((state:RootState) => state.getProducts)\r\n    const { products, loading, error }:{products:any, loading: any, error:any} = getProducts\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen_title\">Latest Products</h2>\r\n\r\n            <div className=\"homescreen_products\">\r\n                {loading ? (\r\n                    <h2>讀取中...</h2>\r\n                ) : error ? (\r\n                    <h2>{error}</h2>\r\n                ) : (\r\n                    products.map((product:any) => (\r\n                        <Product\r\n                            key={product._id}\r\n                            productId={product._id}\r\n                            name={product.name}\r\n                            price={product.price}\r\n                            description={product.description}\r\n                            imageUrl={product.imageUrl}\r\n                        />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import * as actionTypes from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\n\r\nexport const getProducts = () => async (dispatch:Function) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(\"/api/products\")\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id:string) => async (dispatch:Function) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeProductDetails = () => (dispatch:Function) => {\r\n    dispatch({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    })\r\n}","export const ADD_TO_CART = \"ADD_TO_CART\"\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\"\r\nexport const CART_RESET = \"CART_RESET\"","import * as actionTypes from \"../constants/cartConstants\"\r\nimport axios from \"axios\"\r\n\r\nexport const addToCart = (id:string, qty:number) => async (dispatch:Function, getState:Function) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id:string) => (dispatch:Function, getState:Function) => {\r\n    dispatch({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems))\r\n}","import './index.css'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\n\r\n// Actions\r\nimport { getProductDetails } from '../../redux/actions/productActions'\r\nimport { addToCart } from '../../redux/actions/cartActions'\r\n\r\nconst ProductScreen = ({ match, history }: { match: any, history: any }) => {\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector((state: RootState) => state.getProductDetails)\r\n    const { loading, error, product }: { loading: any, error: any, product: any } = productDetails\r\n\r\n    useEffect(() => {\r\n        if (product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id))\r\n        }\r\n    }, [dispatch, product, match])\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty))\r\n        history.push(\"/cart\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"productscreen\">\r\n            {loading ? (\r\n                <h2>Loading...</h2>\r\n            ) : error ? (\r\n                <h2>{error}</h2>\r\n            ) : (\r\n                <>\r\n                    <div className=\"productscreen_left\">\r\n                        <div className=\"left_image\">\r\n                            <img src={product.imageUrl} alt={product.name} />\r\n                        </div>\r\n\r\n                        <div className=\"left_info\">\r\n                            <p className=\"left_name\">{product.name}</p>\r\n                            <p>價格：${product.price} NT</p>\r\n                            <p>{product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"productscreen_right\">\r\n                        <div className=\"right_info\">\r\n                            <p>\r\n                                價格： <span>${product.price} NT</span>\r\n                            </p>\r\n                            <p>\r\n                                狀態：{\" \"}\r\n                                <span>\r\n                                    {product.countInStock > 0 ? \"有現貨\" : \"已售完\"}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                數量\r\n                                <select value={qty} onChange={(e) => setQty(parseInt(e.target.value))}>\r\n                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                        <option key={x + 1} value={x + 1}>\r\n                                            {x + 1}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </p>\r\n                            <p>\r\n                                <button type=\"button\" onClick={addToCartHandler}>Add To Cart</button>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import './index.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeHandler }:{ item:any, qtyChangeHandler:Function, removeHandler:Function }) => {\r\n    return (\r\n        <div className=\"cartitem\">\r\n            <div className=\"cartitem_image\">\r\n                <img src={item.imageUrl} alt={item.name}/>\r\n            </div>\r\n            \r\n            <Link to={`/product/${item.product}`} className=\"cartitem_name\">\r\n                <p>{item.name}</p>\r\n            </Link>\r\n\r\n            <p className=\"cartitem_price\">${item.price} NT</p>\r\n\r\n            <select \r\n                className=\"cartitem_select\" \r\n                value={item.qty} \r\n                onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n            >\r\n                {\r\n                    [...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                        </option>\r\n                    ))\r\n                }\r\n            </select>\r\n            \r\n            <button className=\"cartitem_deleteBtn\" onClick={() => removeHandler(item.product)}>\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import './index.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { RootState } from '../../redux/store'\r\n\r\n//Components\r\nimport CartItem from '../../components/CartItem'\r\n\r\n//Actions\r\nimport { addToCart, removeFromCart } from '../../redux/actions/cartActions'\r\n\r\nconst CartScreen = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state:RootState) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const qtyChangeHandler = (id:string,qty:number) => {\r\n        dispatch(addToCart(id,qty))\r\n    }\r\n\r\n    const removeHandler = (id:string) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0)\r\n    }\r\n\r\n    const getCartSubTotal = () => {\r\n        return cartItems.reduce((price,item) => item.price * item.qty + price, 0)\r\n    }\r\n\r\n    return (\r\n        <div className=\"cartscreen\">\r\n            <div className=\"cartscreen_left\">\r\n                <h2>Shopping Cart</h2>\r\n                {\r\n                    cartItems.length === 0 ? (\r\n                        <div>\r\n                            你的購物車是空的，<Link to=\"/\">回首頁</Link>\r\n                        </div>\r\n                    ) : cartItems.map((item:any) => ( \r\n                        <CartItem \r\n                            item={item} \r\n                            qtyChangeHandler={qtyChangeHandler} \r\n                            removeHandler={removeHandler} \r\n                            key={item.product}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <div className=\"cartscreen_right\">\r\n                <div className=\"cartscreen_info\">\r\n                    <p>總共({getCartCount()})樣物品</p>\r\n                    <p>${getCartSubTotal()} NT</p>\r\n                </div>\r\n                <div>\r\n                    <button>確認結帳</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import './index.css'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\n\r\ntype NavbarProps = {\r\n    click: Function\r\n}\r\n\r\nconst Navbar = (props: NavbarProps) => {\r\n\r\n    const handleClick = (e: any) => {\r\n        props.click();\r\n    };\r\n\r\n    const cart = useSelector((state:RootState) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => qty + 1, 0)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <div className=\"navbar_logo\">\r\n                <h2>Testing Shop</h2>\r\n            </div>\r\n\r\n            <ul className=\"navbar_links\">\r\n                <li>\r\n                    <Link to=\"/cart\" className=\"cart_link\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart\r\n                            <span className=\"cartlogo_badge\">{getCartCount()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">Shop</Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <div className=\"hamburger_menu\" onClick={handleClick}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import './index.css'\r\n\r\ntype BackdropProps = {\r\n    show:boolean,\r\n    click:Function\r\n}\r\n\r\nconst Backdrop = (props:BackdropProps) => {\r\n\r\n    const handleClick = (e:any) => {\r\n        props.click()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.show && <div className=\"backdrop\" onClick={handleClick}>\r\n                \r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Backdrop\r\n","import './index.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../redux/store'\r\n\r\ntype SideDrawerProps = {\r\n    show:boolean,\r\n    click:Function\r\n}\r\n\r\nconst SideDrawer = (props:SideDrawerProps) => {\r\n    const sideDrawerClass = [\"sidedrawer\"]\r\n\r\n    const handleClick = (e:any) => {\r\n        props.click()\r\n    }\r\n\r\n    if(props.show){\r\n        sideDrawerClass.push(\"show\")\r\n    }\r\n\r\n    const cart = useSelector((state:RootState) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => qty + 1, 0)\r\n    }\r\n\r\n    return (\r\n        <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer_links\" onClick={handleClick}>\r\n                <li>\r\n                    <Link to=\"/cart\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                        <span>\r\n                            Cart <span className=\"sidedrawer_cartbadge\">{getCartCount()}</span>\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/\">Shop</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideDrawer\r\n","import './App.css'\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n//Screens\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\n\n//Components\nimport Navbar from './components/Navbar';\nimport Backdrop from './components/Backdrop'\nimport SideDrawer from './components/SideDrawer';\n\nfunction App() {\n\n  const [sideToggle,setSideToggle] = useState(false)\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)}/>\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)}/>\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)}/>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen}/>\n          <Route exact path=\"/product/:id\" component={ProductScreen}/>\n          <Route exact path=\"/cart\" component={CartScreen}/>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { getProductDetailsReducer,getProductsReducer } from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst cartFromLocalStorage = localStorage.getItem(\"cart\")\r\n    ? JSON.parse(localStorage.getItem(\"cart\") || \"\")\r\n    : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\nexport type RootState = ReturnType<typeof reducer>;","import * as actionTypes from \"../constants/cartConstants\"\r\n\r\nexport const cartReducer = (prestate:{ cartItems:(any[]) } = { cartItems:[] }, action:{type:string, payload:any}) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n            const item = action.payload\r\n\r\n            const existItem = prestate.cartItems.find((x) => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...prestate,\r\n                    cartItems: prestate.cartItems.map((x) => \r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...prestate,\r\n                    cartItems: [...prestate.cartItems, item]\r\n                }\r\n            }\r\n        case actionTypes.REMOVE_FROM_CART:\r\n            return {\r\n                ...prestate,\r\n                cartItems: prestate.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        default:\r\n            return prestate\r\n    }\r\n}","import * as actionTypes from \"../constants/productConstants\"\r\n\r\nexport const getProductsReducer = (prestate = { products:[] }, action:{type:string, payload:any}) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return prestate\r\n    }\r\n}\r\n\r\nexport const getProductDetailsReducer = (prestate = { product:{} }, action:{type:string, payload:any}) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {}\r\n            }\r\n        default:\r\n            return prestate\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}