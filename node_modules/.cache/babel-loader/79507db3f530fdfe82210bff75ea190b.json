{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from\"redux\";import thunk from\"redux-thunk\";import{composeWithDevTools}from\"redux-devtools-extension\";// Reducers\nimport{cartReducer}from\"./reducers/cartReducers\";import{getProductDetailsReducer,getProductsReducer}from\"./reducers/productReducers\";var reducer=combineReducers({cart:cartReducer,getProducts:getProductsReducer,getProductDetails:getProductDetailsReducer});var middleware=[thunk];var cartFromLocalStorage=localStorage.getItem(\"cart\")?JSON.parse(localStorage.getItem(\"cart\")||\"\"):[];var INITIAL_STATE={cart:{cartItems:cartFromLocalStorage}};var store=createStore(reducer,INITIAL_STATE,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["F:/VS code/web_shop/frontend/src/redux/store.ts"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","cartReducer","getProductDetailsReducer","getProductsReducer","reducer","cart","getProducts","getProductDetails","middleware","cartFromLocalStorage","localStorage","getItem","JSON","parse","INITIAL_STATE","cartItems","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CAEA;AACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,wBAAT,CAAkCC,kBAAlC,KAA4D,4BAA5D,CAEA,GAAMC,CAAAA,OAAO,CAAGP,eAAe,CAAC,CAC5BQ,IAAI,CAAEJ,WADsB,CAE5BK,WAAW,CAAEH,kBAFe,CAG5BI,iBAAiB,CAAEL,wBAHS,CAAD,CAA/B,CAMA,GAAMM,CAAAA,UAAU,CAAG,CAACT,KAAD,CAAnB,CAEA,GAAMU,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,EACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,GAAgC,EAA3C,CADuB,CAEvB,EAFN,CAIA,GAAMG,CAAAA,aAAa,CAAG,CAClBT,IAAI,CAAE,CACFU,SAAS,CAAEN,oBADT,CADY,CAAtB,CAMA,GAAMO,CAAAA,KAAK,CAAGpB,WAAW,CACrBQ,OADqB,CAErBU,aAFqB,CAGrBd,mBAAmB,CAACF,eAAe,MAAf,QAAmBU,UAAnB,CAAD,CAHE,CAAzB,CAMA,cAAeQ,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport { getProductDetailsReducer,getProductsReducer } from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk]\r\n\r\nconst cartFromLocalStorage = localStorage.getItem(\"cart\")\r\n    ? JSON.parse(localStorage.getItem(\"cart\") || \"\")\r\n    : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart: {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\nexport type RootState = ReturnType<typeof reducer>;"]},"metadata":{},"sourceType":"module"}